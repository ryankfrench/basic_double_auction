# Generated by Django 4.0.3 on 2022-03-10 20:45

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tinymce.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HelpDocs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=300, verbose_name='Title')),
                ('text', tinymce.models.HTMLField(default='', max_length=100000, verbose_name='Help Doc Text')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Help Doc',
                'verbose_name_plural': 'Help Docs',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Instruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_html', tinymce.models.HTMLField(default='Text here', verbose_name='Page HTML Text')),
                ('page_number', models.IntegerField(default=1, verbose_name='Page Number')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Instruction Page',
                'verbose_name_plural': 'Instruction Pages',
                'ordering': ['page_number'],
            },
        ),
        migrations.CreateModel(
            name='InstructionSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(default='Name Here', max_length=100, verbose_name='Label')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Instruction Set',
                'verbose_name_plural': 'Instruction Sets',
                'ordering': ['label'],
            },
        ),
        migrations.CreateModel(
            name='Parameters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_email', models.CharField(default='JohnSmith@abc.edu', max_length=1000)),
                ('experiment_time_zone', models.CharField(default='US/Pacific', max_length=1000)),
                ('site_url', models.CharField(default='http://localhost:8000', max_length=200)),
                ('invitation_text', tinymce.models.HTMLField(default='', verbose_name='Invitation Text')),
                ('invitation_subject', models.CharField(default='', max_length=200, verbose_name='Invitation Subject')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Parameters',
                'verbose_name_plural': 'Parameters',
            },
        ),
        migrations.CreateModel(
            name='ParameterSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_count', models.IntegerField(default=20, verbose_name='Number of periods')),
                ('period_length', models.IntegerField(default=60, verbose_name='Period Length, Production')),
                ('show_instructions', models.BooleanField(default=True, verbose_name='Show Instructions')),
                ('test_mode', models.BooleanField(default=False, verbose_name='Test Mode')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('instruction_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameter_sets', to='main.instructionset')),
            ],
            options={
                'verbose_name': 'Parameter Set',
                'verbose_name_plural': 'Parameter Sets',
            },
        ),
        migrations.CreateModel(
            name='ParameterSetPlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('parameter_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameter_set_players', to='main.parameterset')),
            ],
            options={
                'verbose_name': 'Parameter Set Player',
                'verbose_name_plural': 'Parameter Set Players',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='*** New Session ***', max_length=300)),
                ('start_date', models.DateField(default=django.utils.timezone.now)),
                ('channel_key', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='Channel Key')),
                ('session_key', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='Session Key')),
                ('started', models.BooleanField(default=False)),
                ('current_period', models.IntegerField(default=0)),
                ('time_remaining', models.IntegerField(default=0)),
                ('timer_running', models.BooleanField(default=False)),
                ('finished', models.BooleanField(default=False)),
                ('shared', models.BooleanField(default=False)),
                ('locked', models.BooleanField(default=False)),
                ('invitation_text', tinymce.models.HTMLField(default='', verbose_name='Invitation Text')),
                ('invitation_subject', tinymce.models.HTMLField(default='', verbose_name='Invitation Subject')),
                ('soft_delete', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('collaborators', models.ManyToManyField(related_name='sessions_b', to=settings.AUTH_USER_MODEL)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_a', to=settings.AUTH_USER_MODEL)),
                ('parameter_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.parameterset')),
            ],
            options={
                'verbose_name': 'Session',
                'verbose_name_plural': 'Sessions',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='SessionPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_number', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_periods', to='main.session')),
            ],
            options={
                'verbose_name': 'Session Period',
                'verbose_name_plural': 'Session Periods',
                'ordering': ['period_number'],
            },
        ),
        migrations.CreateModel(
            name='SessionPlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_number', models.IntegerField(default=0, verbose_name='Player number')),
                ('player_key', models.UUIDField(default=uuid.uuid4, editable=False, verbose_name='Player Key')),
                ('connecting', models.BooleanField(default=False, verbose_name='Consumer is connecting')),
                ('connected_count', models.IntegerField(default=0, verbose_name='Number of consumer connections')),
                ('name', models.CharField(default='', max_length=100, verbose_name='Full Name')),
                ('student_id', models.CharField(default='', max_length=100, verbose_name='Student ID')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Email Address')),
                ('earnings', models.IntegerField(default=0, verbose_name='Earnings in cents')),
                ('current_instruction', models.IntegerField(default=0, verbose_name='Current Instruction')),
                ('current_instruction_complete', models.IntegerField(default=0, verbose_name='Current Instruction Complete')),
                ('instructions_finished', models.BooleanField(default=False, verbose_name='Instructions Finished')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('parameter_set_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_players_paramterset', to='main.parametersetplayer')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_players', to='main.session')),
            ],
            options={
                'verbose_name': 'Session Player',
                'verbose_name_plural': 'Session Players',
                'ordering': ['player_number'],
            },
        ),
        migrations.CreateModel(
            name='SessionPlayerPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('session_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_player_periods_a', to='main.sessionperiod')),
                ('session_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_player_periods_b', to='main.sessionplayer')),
                ('earnings', models.IntegerField(default=0, verbose_name='Period Earnings')),
            ],
            options={
                'verbose_name': 'Session Player Period',
                'verbose_name_plural': 'Session Player Periods',
                'ordering': ['session_player__session', 'session_player', 'session_period__period_number'],
            },
        ),
        migrations.CreateModel(
            name='SessionPlayerChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(default='Chat here', max_length=1000, verbose_name='Chat Text')),
                ('chat_type', models.CharField(choices=[('All', 'All'), ('Individual', 'Individual')], max_length=100, verbose_name='Chat Type')),
                ('time_remaining', models.IntegerField(default=0, verbose_name='Good one amount')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('session_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_player_chats_a', to='main.sessionperiod')),
                ('session_player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_player_chats_b', to='main.sessionplayer')),
                ('session_player_recipients', models.ManyToManyField(related_name='session_player_chats_c', to='main.sessionplayer')),
            ],
            options={
                'verbose_name': 'Session Player Chat',
                'verbose_name_plural': 'Session Player Chats',
                'ordering': ['timestamp'],
            },
        ),
        migrations.AddConstraint(
            model_name='instructionset',
            constraint=models.UniqueConstraint(fields=('label',), name='unique_instruction_set'),
        ),
        migrations.AddField(
            model_name='instruction',
            name='instruction_set',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instructions', to='main.instructionset'),
        ),
        migrations.AddConstraint(
            model_name='helpdocs',
            constraint=models.UniqueConstraint(fields=('title',), name='unique_help_doc'),
        ),
        migrations.AddConstraint(
            model_name='sessionplayerperiod',
            constraint=models.UniqueConstraint(fields=('session_player', 'session_period'), name='unique_session_player_period'),
        ),
        migrations.AddConstraint(
            model_name='sessionplayerchat',
            constraint=models.CheckConstraint(check=models.Q(('text', ''), _negated=True), name='text_not_empty'),
        ),
        migrations.AddConstraint(
            model_name='sessionplayer',
            constraint=models.UniqueConstraint(condition=models.Q(('email', ''), _negated=True), fields=('session', 'email'), name='unique_email_session_player'),
        ),
        migrations.AddConstraint(
            model_name='sessionperiod',
            constraint=models.UniqueConstraint(fields=('session', 'period_number'), name='unique_SD'),
        ),
    ]
